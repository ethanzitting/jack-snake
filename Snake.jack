class Snake {
    field int x, y;
    field int size;
    field Link child;

    constructor Snake new(int Ax, int Ay) {
        let x = Ax;
        let y = Ay;
        let size = 10;
        do draw();

        let child = Link.new(x - size, y, 2);

        return this;
    }

    method void dispose() {
        do child.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void addLink() {
        do child.addLink();
        return;
    }

    method void drawSize() {
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    method void draw() {
        do Screen.setColor(true);
        do drawSize();
        return;
    }

    method void erase() {
        do Screen.setColor(false);
        do drawSize();
        return;
    }

    method void setPosition(int argX, int argY) {
        var int prevX, prevY;

        let prevX = x;
        let prevY = y;

        do erase();
        let x = argX;
        let y = argY;
        do draw();

        do child.setPosition(prevX, prevY);

        return;
    }

    method void moveUp() {
        if (y > 21) {
            do setPosition(x, y - size);
        }
        return;
    }

    method void moveRight() {
        if (x < 500) {
            do setPosition(x + size, y);
        }
        return;
    }

    method void moveDown() {
        if (y < 240) {
            do setPosition(x, y + size);
        }
        return;
    }

    method void moveLeft() {
        if (x > 21) {
            do setPosition(x - size, y);
        }
        return;
    }
}
