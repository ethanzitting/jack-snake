class SnakeGame {
   field Snake snake;
   field int direction;


   constructor SnakeGame new() {
      let snake = Snake.new(200, 200);
      let direction = 0;
      return this;
   }

   method void dispose() {
      do square.dispose();
      do Memory.deAlloc(this);
      return;
   }

   method void moveSquare() {
      if (direction = 1) { do snake.moveUp(); }
      if (direction = 2) { do snake.moveDown(); }
      if (direction = 3) { do snake.moveLeft(); }
      if (direction = 4) { do snake.moveRight(); }
      do Sys.wait(200);  // delays the next movement
      return;
   }

   method void run() {
      var char key;
      var boolean exit;
      let exit = false;
      
      while (~exit) {
         while (key = 0) {
            let key = Keyboard.keyPressed();
            do moveSquare();
         }
         if (key = 81)  { let exit = true; }     // q key
         if (key = 131) { let direction = 1; }   // up arrow
         if (key = 133) { let direction = 2; }   // down arrow
         if (key = 130) { let direction = 3; }   // left arrow
         if (key = 132) { let direction = 4; }   // right arrow

         while (~(key = 0)) {
            let key = Keyboard.keyPressed();
            do moveSquare();
         }
     }
     return;
   }
}



