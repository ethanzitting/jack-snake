class SnakeGame {
    field Snake snake;
    field Mouse mouse;
    field Utils utils;
    field int direction;
    field boolean exit;

    constructor SnakeGame new() {
        let utils = Utils.new();
        let snake = Snake.new(200, 200);
        let direction = 0;
        let mouse = Mouse.new(utils, 40, 40);
        let exit = false;
        return this;
    }

    method void dispose() {
        do snake.dispose();
        do mouse.dispose();
        do utils.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method boolean isSnakeOnMouse() {
        if (snake.getX() = mouse.getX()
            & snake.getY() = mouse.getY()) {
            return true;
        }
        return false;
    }

    method void moveSquare() {
        var boolean mouseCaught;

        if (direction = 1) { do snake.moveUp(); }
        if (direction = 2) { do snake.moveDown(); }
        if (direction = 3) { do snake.moveLeft(); }
        if (direction = 4) { do snake.moveRight(); }

        let mouseCaught = isSnakeOnMouse();
        if (mouseCaught) {
            do snake.addLink();
            do mouse.relocate();
        }

        do mouse.draw();

        do Sys.wait(100);

        return;
    }

    method void run() {
        var char key;

        while (~exit) {
            while (key = 0) {
                let key = utils.keyPressed();
                do moveSquare();
            }
            if (key = 81)  { let exit = true; }     // q key
            if (key = 131) { let direction = 1; }   // up arrow
            if (key = 133) { let direction = 2; }   // down arrow
            if (key = 130) { let direction = 3; }   // left arrow
            if (key = 132) { let direction = 4; }   // right arrow

            while (~(key = 0)) {
                let key = utils.keyPressed();
                do moveSquare();
            }
        }
        return;
    }
}



